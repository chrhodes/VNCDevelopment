<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFrameworks>net8.0;net481</TargetFrameworks>
        <GenerateAssemblyInfo>true</GenerateAssemblyInfo>
        <SignAssembly>true</SignAssembly>
        <AssemblyOriginatorKeyFile>VNC.snk</AssemblyOriginatorKeyFile>        
        <VersionPrefix>3.2.0</VersionPrefix>
        <VersionSuffix>Release</VersionSuffix>
        <FileVersion>2025.08.20</FileVersion>    
        <Description>Logging Wrapper on top of EnterpriseLibrary.Logging</Description>
        <LangVersion>12.0</LangVersion>
        <Nullable>enable</Nullable>
        <ImplicitUsings>disable</ImplicitUsings>        
    </PropertyGroup>

    <!-- This is for NuGet Packages -->
    
    <PropertyGroup>
        <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
        <PackageVersion>3.2.0</PackageVersion>
        <PackageLicenseFile>LICENSE</PackageLicenseFile>
        <PackageReadmeFile>README.md</PackageReadmeFile>
        <PackageProjectUrl>https://github.com/chrhodes/VNCDevelopment</PackageProjectUrl>
        <RepositoryUrl>https://github.com/chrhodes/VNCDevelopment</RepositoryUrl>
        <RepositoryType>Git</RepositoryType>
        <PackageTags>logging enterpriselibrary</PackageTags>
        <PackageIcon>VNC.png</PackageIcon>
        <Authors>Christopher Rhodes</Authors>
        <Company>VNC</Company>
        <Copyright>Copyright Â© VNC 2010-2025</Copyright>
        <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
    </PropertyGroup>

    <ItemGroup>
      <None Update="Log.tt">
        <Generator>TextTemplatingFileGenerator</Generator>
        <LastGenOutput>Log.cs</LastGenOutput>
      </None>
      <None Update="LoggingPriority.tt">
        <Generator>TextTemplatingFileGenerator</Generator>
        <LastGenOutput>LoggingPriority.cs</LastGenOutput>
      </None>
      <None Update="LogNamed.tt">
        <Generator>TextTemplatingFileGenerator</Generator>
        <LastGenOutput>LogNamed.cs</LastGenOutput>
      </None>
    </ItemGroup>

    <ItemGroup>
      <Service Include="{508349b6-6b84-4df5-91f0-309beebad82d}" />
    </ItemGroup>

    <ItemGroup>
      <Compile Update="Log.cs">
        <DesignTime>True</DesignTime>
        <AutoGen>True</AutoGen>
        <DependentUpon>Log.tt</DependentUpon>
      </Compile>
      <Compile Update="LoggingPriority.cs">
        <DesignTime>True</DesignTime>
        <AutoGen>True</AutoGen>
        <DependentUpon>LoggingPriority.tt</DependentUpon>
      </Compile>
      <Compile Update="LogNamed.cs">
        <DesignTime>True</DesignTime>
        <AutoGen>True</AutoGen>
        <DependentUpon>LogNamed.tt</DependentUpon>
      </Compile>
    </ItemGroup>

    <ItemGroup>
        <None Include="..\..\LICENSE">
            <Pack>True</Pack>
            <PackagePath></PackagePath>
        </None>
        <None Include="README.md">
            <Pack>True</Pack>
            <PackagePath></PackagePath>
        </None>
        <None Include="..\..\VNC.png">
            <Pack>True</Pack>
            <PackagePath></PackagePath>
        </None>
    </ItemGroup>

    <ItemGroup>
      <PackageReference Include="EnterpriseLibrary.Logging.NetCore" Version="6.3.2" />
    </ItemGroup>

    <PropertyGroup Condition="'$(Configuration)'=='Debug'">
        <!-- Uncoment next line to switch to ProjectReference(s) -->
        <!-- <DefineConstants>$(DefineConstants);VNCPROJECTREF</DefineConstants> -->
    </PropertyGroup>

    <Choose>
        <When Condition="'$(DefineConstants.Contains(VNCPROJECTREF))'">
            <ItemGroup>
            </ItemGroup>
        </When>
        <When Condition="'!$(DefineConstants.Contains(VNCPROJECTREF))'">
            <ItemGroup>
            </ItemGroup>
        </When>
    </Choose>

    <!--Keep a copy as Visual Studio will remove things when doing Release builds.-->

    <!--<Choose>
        <When Condition="'$(DefineConstants.Contains(VNCPROJECTREF))'">
            <ItemGroup>
            </ItemGroup>
        </When>
        <When Condition="'!$(DefineConstants.Contains(VNCPROJECTREF))'">
            <ItemGroup>
            </ItemGroup>
        </When>
    </Choose>--> 

    <!--This updates the file version to the current date.-->

    <Target Name="PreBuild" BeforeTargets="PreBuildEvent" Condition="'$(Configuration)'=='Release'">
        <Exec Command="powershell.exe -File &quot;$(ProjectDir)\Execute-PreBuild.ps1&quot; -Verbose $(ProjectFileName)" />
    </Target>

    <!--<Target Name="PostBuild" AfterTargets="PostBuildEvent">
        <Exec Command="powershell.exe -File &quot;$(ProjectDir)\Execute-PostBuild.ps1&quot; -Verbose $(ProjectFileName)" />
    </Target>-->


</Project>